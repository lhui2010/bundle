#!/bin/perl -w

use strict;

if (@ARGV <1)
{
	print "\t/////////////////////////\n\t//  Delta2Coordinates  //\n\t/////////////////////////\n\n\tA tools to extract coordinates coorespondance from delta file generated by NUCmer. \n
\teg. from IRGSP RAP2 to 1.0
\t*.1coords also contained such information, but the match block contains indels, this script will print coordinates change exactly
\n\tUsage: $0 out.1delta >out.1delta.coordinates\n\n";
	exit;
}

#eg: input delta format
#/lustre/user//xg/weedy/03.Fst/rap2_to_1.0/chr01.fa /lustre/user/zhangyesheng/xg/weedy/03.Fst/rap2_to_1.0/chr01.seq.masked
#NUCMER
#>chr01 chr01 43270923 45064769
#1001 10053455 1 10052411 46 46 0
#5378415
#1
#1
#1
#1
#1

#defining major variables
my ($seqID_ref, $seqID_qry);
my ($len_ref, $len_qry);

my ($previous_ref_loci, $previous_qry_loci);

my ($block_start_ref_loci, $block_start_qry_loci);
my ($block_end_ref_loci, $block_end_qry_loci);

#if two variation were too close, don't print
my $threshold = 5;

#skip header
$_=<>;
$_=<>;

while(<>)
{
	chomp;
	my @e=split;
	if(/>/)
	{
		$e[0]=~s/>//;
		($seqID_ref, $seqID_qry, $len_ref, $len_qry) = @e;
		next;
	}
	elsif(int(@e) == 7)
	{
		if(defined $block_end_ref_loci)
		{
			print $previous_ref_loci, "\t", $block_end_ref_loci, "\t", $previous_qry_loci, "\t", $block_end_qry_loci, "\n";
		}
		#refresh start, end of block
		($block_start_ref_loci, $block_end_ref_loci, $block_start_qry_loci, $block_end_qry_loci, undef, undef, undef) = split;
		($previous_ref_loci, $previous_qry_loci) = ($block_start_ref_loci, $block_start_qry_loci);
		next;
	}
	
	my $roadblock = $_;
	my $abs_roadblock = abs($roadblock);

	if ($abs_roadblock >= $threshold)
	{
		print $previous_ref_loci, "\t", $previous_ref_loci + $abs_roadblock-1, "\t", $previous_qry_loci, "\t", $previous_qry_loci + $abs_roadblock-1,"\n";
	}

	$previous_ref_loci += $abs_roadblock;
	$previous_qry_loci += $abs_roadblock;
	if ($roadblock < 0 )
	{
		$previous_ref_loci -=1; #缺失一个碱基，所以现在是空位，要挪到之前的那个碱基上去，知道两者能对齐
	}
	elsif($roadblock > 0 ) #prevent roadblock==0 error
	{
		$previous_qry_loci -=1;
	}
}


print $previous_ref_loci, "\t", $block_end_ref_loci, "\t", $previous_qry_loci, "\t", $block_end_qry_loci, "\n";
